//01.project setup
//console.log("Hello Word")

const express = require("express")
const app = express()

const PORT = process.env.PORT || 4000;

app.listen(PORT, ()=> {
    console.log(`Server Connected Successfully @ ${PORT}`)
})

//REQ - RES
app.use('/', (req, res)=>{
    res.send("<h1>Welcom Suby")
})
//By using the middleware, we can define the requesting paths, and respective responses

//12.Deployment

//02.connect to mongodb
const mongoose = require("mongoose")
const dotEnv = require("dotenv")

dotEnv.config()

mongoose.connect(process.env.MONGO_URI)
.then(
    ()=> console.log("Connected to mongodb successfully")
)
.catch(
    (error) => console.error(error)
)

//03.Vendor Registration - Insertion of vendor record into vendors table
const bodyParser = require("body-parser")
app.use(bodyParser.json())

//Lets define the path to activate/access all vendorRouting paths,which will activate their respective vendorController function
const vendorRoutes = require('./router/vendorRoutes')

app.use('/vendor', vendorRoutes)


//04.Vendor login - Based on the login credentials, we have to verify based on that credentials, any record is existed in vendors table or not


//05.JWT token
//for each login, we have to generate a token, one vendor._id, These field was automatically generated by mongodb for each registered record


//06.Add Firm
//Lets define the path to activate/access all firmRouting paths, whcih will activate their respective firmController function
const firmRoutes = require('./router/firmRoutes')

app.use('/firm', firmRoutes)


//07.Get All Vendors records
//To retrieve all vendor records from vendors table, define a function in vendorController


//08.Get Vendor Record by Id


//09.CRUD_API
const productRoutes = require('./router/productRoutes')

app.use('/product', productRoutes)

//for image dynamic routing
const path = require("path")
app.use('/uploads', express.static('uploads'));
